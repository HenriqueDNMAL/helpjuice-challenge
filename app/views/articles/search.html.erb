<div class="text-center m-5">
  <%= link_to "Analytics", admin_dashboard_path %>
</div>

<%= form_with url: search_articles_path, method: :get, local: true, id: "search-form", class: "row g-3 justify-content-center m-5" do |form| %>
  <div class="col-12 col-md-6 position-relative">
    <%= form.label :query, "Search for articles:", class: "visually-hidden" %>
    <%= form.text_field :query, name: "search[query]", id: "search-query", autocomplete: "off", class: "form-control", required: true, placeholder: "Search articles" %>
    <div id="autocomplete-suggestions" class="list-group position-absolute" style="width: 98%; z-index: 1000; display: none;"></div>
  </div>
  <div class="col-auto">
    <%= form.submit "Search", class: "btn btn-primary mb-3" %>
  </div>
<% end %>

<div id="search-results" class="mt-4">
  <% if @articles.present? %>
    <h2 class="text-center mb-5">Search Results:</h2>
    <ul class="list-group">
      <% @articles.each do |article| %>
        <li class="list-group-item">
          <h3><%= article.title %></h3>
          <p><%= article.content %></p>
        </li>
      <% end %>
    </ul>
  <% else %>
    <p class="text-center text-muted">No articles found.</p>
  <% end %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const searchInput = document.getElementById("search-query");
    const suggestionsBox = document.getElementById("autocomplete-suggestions");

    searchInput.addEventListener("input", function() {
      const query = searchInput.value.trim();
      if (query.length > 0) {
        fetch(`/articles/search.json?search[query]=${encodeURIComponent(query)}`)
          .then(response => response.json())
          .then(data => {
            if (data.length > 0) {
              suggestionsBox.innerHTML = data.map(title => `<a href="#" class="list-group-item list-group-item-action">${title}</a>`).join('');
              suggestionsBox.style.display = 'block';
            } else {
              suggestionsBox.style.display = 'none';
            }
          })
          .catch(error => {
            console.error('Error fetching suggestions:', error);
            suggestionsBox.style.display = 'none';
          });
      } else {
        suggestionsBox.style.display = 'none';
      }
    });

    suggestionsBox.addEventListener("click", function(event) {
      event.preventDefault();
      if (event.target.tagName === 'A') {
        searchInput.value = event.target.textContent;
        suggestionsBox.style.display = 'none';
      }
    });

    searchInput.addEventListener("blur", function() {
      setTimeout(() => suggestionsBox.style.display = 'none', 200);
    });

    const searchForm = document.getElementById("search-form");
    searchForm.addEventListener("submit", function(event) {
      event.preventDefault(); // Prevent the default form submission
      const query = searchInput.value.trim();
      if (query) {
        // Redirect to the search results page with the query
        window.location.href = `${searchForm.getAttribute('action')}?search[query]=${encodeURIComponent(query)}`;
      }
    });
  });
</script>
